// ==UserScript==
// @name         YouTube Liked Videos Mass Unliker (Working Aug 2025)
// @namespace    http://tampermonkey.net/
// @version      7.0
// @description  Mass unlike liked videos on YouTube with working selectors, scrolling, UI, and notifications ‚Äî verified Aug 2025 layout fix by ChatGPT.
// @author       ChatGPT
// @match        *://www.youtube.com/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const DELAY = 2500;
    let started = false;
    let processed = new Set();

    function createUI() {
        const box = document.createElement('div');
        box.id = 'yt-unlike-status';
        Object.assign(box.style, {
            position: 'fixed',
            top: '10px',
            right: '10px',
            background: '#000',
            color: '#0f0',
            padding: '10px',
            zIndex: 999999,
            fontSize: '12px',
            fontFamily: 'monospace',
            maxHeight: '200px',
            overflowY: 'auto',
            borderRadius: '8px',
            boxShadow: '0 0 10px rgba(0,255,0,0.4)'
        });
        box.innerHTML = '<strong>üîÅ YouTube Unliker Ready</strong><br>';
        document.body.appendChild(box);
    }

    function log(text, color = '#0f0') {
        const box = document.getElementById('yt-unlike-status');
        if (!box) return;
        const line = document.createElement('div');
        line.textContent = text;
        line.style.color = color;
        box.appendChild(line);
        box.scrollTop = box.scrollHeight;
        console.log(text);
    }

    function notify(title, body) {
        if (Notification.permission === "granted") {
            new Notification(title, { body });
        }
    }

    function isOnLikedPlaylist() {
        return new URLSearchParams(window.location.search).get("list") === "LL";
    }

    async function sleep(ms) {
        return new Promise(r => setTimeout(r, ms));
    }

    async function unlikeVideos() {
        const videos = document.querySelectorAll('ytd-playlist-video-renderer');

        for (const video of videos) {
            const videoId = video.dataset.videoId;
            if (processed.has(videoId)) continue;

            const title = video.querySelector('#video-title')?.textContent?.trim() || 'Untitled';

            try {
                // Use button that shows "Remove from Liked videos"
                const menuButton = video.querySelector('ytd-menu-renderer yt-icon-button');

                if (menuButton) {
                    menuButton.click();
                    await sleep(500);

                    const menuItems = document.querySelectorAll('tp-yt-paper-listbox ytd-menu-service-item-renderer');
                    for (let item of menuItems) {
                        const label = item.textContent?.trim().toLowerCase();
                        if (label.includes('remove from liked')) {
                            item.click();
                            log(`üëç Unliked: ${title}`);
                            processed.add(videoId);
                            await sleep(DELAY);
                            break;
                        }
                    }
                } else {
                    log(`‚è≠Ô∏è Skipped (menu not found): ${title}`, '#888');
                }
            } catch (e) {
                log(`‚ùå Failed: ${title}`, 'red');
                notify('‚ùå Failed to unlike', title);
            }
        }
    }

    function scrollMore() {
        window.scrollBy(0, 3000);
    }

    async function runScript() {
        if (started) return;
        started = true;

        log('‚úÖ Detected Liked Videos playlist. Running...');
        notify('üîÅ Started unliking', 'Working through your liked videos...');

        while (true) {
            scrollMore();
            await sleep(1000);
            await unlikeVideos();
        }
    }

    function init() {
        createUI();
        Notification.requestPermission();
        log('‚è≥ Waiting for Liked Videos playlist...');

        const watcher = setInterval(() => {
            if (isOnLikedPlaylist()) {
                const items = document.querySelectorAll('ytd-playlist-video-renderer');
                if (items.length > 0) {
                    clearInterval(watcher);
                    runScript();
                } else {
                    log('‚åõ Playlist found, waiting for videos...', '#ff0');
                }
            }
        }, 1500);
    }

    window.addEventListener('load', init);
})();

// ==UserScript==
// @name         YouTube Liked Videos Force-Unliker (Stable v2)
// @namespace    http://tampermonkey.net/
// @version      10.1
// @description  Force-unlikes liked videos from the 'Liked Videos' playlist using native button clicks with robust error handling (Aug 2025 safe).
// @author       ChatGPT
// @match        *://www.youtube.com/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const DELAY = 2500;
    let processed = new Set();
    let running = false;

    function logBox(text, color = '#0f0') {
        const box = document.getElementById('unlike-box');
        if (!box) return;
        const line = document.createElement('div');
        line.textContent = text;
        line.style.color = color;
        box.appendChild(line);
        box.scrollTop = box.scrollHeight;
        console.log(text);
    }

    function createLogBox() {
        const box = document.createElement('div');
        box.id = 'unlike-box';
        Object.assign(box.style, {
            position: 'fixed',
            top: '10px',
            right: '10px',
            background: '#111',
            color: '#0f0',
            padding: '10px',
            zIndex: 999999,
            fontSize: '13px',
            fontFamily: 'monospace',
            maxHeight: '250px',
            overflowY: 'auto',
            borderRadius: '8px',
            boxShadow: '0 0 10px rgba(0,255,0,0.4)'
        });
        box.innerHTML = '<b>🟢 YouTube Mass Unliker</b><br>';
        document.body.appendChild(box);
    }

    function isLikedVideosPage() {
        return new URLSearchParams(location.search).get("list") === "LL";
    }

    function scrollDown() {
        window.scrollBy(0, 4000);
    }

    async function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    async function unlikeItem(item) {
        try {
            const title = item.querySelector('#video-title')?.textContent.trim() || 'Untitled';
            const videoId = item.dataset.videoId || item.querySelector('a')?.href.split('v=')[1];

            if (processed.has(videoId)) return;

            const likeButtonRenderer = item.querySelector('ytd-toggle-button-renderer[is-icon-button][aria-pressed="true"]');
            const button = likeButtonRenderer?.querySelector('button');

            if (!button) {
                logBox(`⚠️ Could not find Like button for: ${title}`, 'yellow');
                return;
            }

            // Simulate click
            button.click();

            logBox(`👍 Unliked: ${title}`);
            processed.add(videoId);
            await sleep(DELAY);
        } catch (err) {
            logBox(`❌ Error unliking video: ${err.message}`, 'red');
        }
    }

    async function unlikeVisibleVideos() {
        const videos = document.querySelectorAll('ytd-playlist-video-renderer');

        for (const item of videos) {
            await unlikeItem(item);
        }
    }

    async function run() {
        if (running) return;
        running = true;

        logBox('✅ Starting mass unlike script...');
        while (true) {
            scrollDown();
            await sleep(2000);
            await unlikeVisibleVideos();
        }
    }

    function init() {
        createLogBox();
        const check = setInterval(() => {
            if (isLikedVideosPage()) {
                const items = document.querySelectorAll('ytd-playlist-video-renderer');
                if (items.length > 0) {
                    clearInterval(check);
                    logBox('🎯 Detected Liked Videos page. Starting...');
                    run();
                } else {
                    logBox('⌛ Waiting for videos to load...', '#ff0');
                }
            }
        }, 1500);
    }

    window.addEventListener('load', init);
})();

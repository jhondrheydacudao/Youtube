// ==UserScript==
// @name         YouTube Liked Videos Mass Unliker + Status + Notifications
// @namespace    http://tampermonkey.net/
// @version      6.0
// @description  Mass unlike all videos in your "Liked Videos" playlist on YouTube with on-screen log and desktop notifications (working Aug 2025 version)
// @author       ChatGPT
// @match        *://www.youtube.com/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const DELAY = 2500;
    let processed = new Set();
    let scriptStarted = false;

    // Utility: Delay
    const sleep = (ms) => new Promise(res => setTimeout(res, ms));

    // Utility: Send browser notification
    function notify(title, body) {
        if (!("Notification" in window)) return;
        if (Notification.permission === "granted") {
            new Notification(title, { body });
        } else if (Notification.permission !== "denied") {
            Notification.requestPermission().then(permission => {
                if (permission === "granted") {
                    new Notification(title, { body });
                }
            });
        }
    }

    // UI: Create floating log box
    function createLogBox() {
        const box = document.createElement('div');
        box.id = 'yt-unlike-log';
        Object.assign(box.style, {
            position: 'fixed',
            top: '10px',
            right: '10px',
            background: '#111',
            color: '#0f0',
            padding: '10px',
            fontSize: '13px',
            fontFamily: 'monospace',
            zIndex: 999999,
            maxHeight: '200px',
            overflowY: 'auto',
            borderRadius: '8px',
            boxShadow: '0 0 10px rgba(0,255,0,0.3)'
        });
        box.innerHTML = `<strong>üîÅ Script Loaded</strong><br>`;
        document.body.appendChild(box);
    }

    // UI: Add a message to the log
    function log(message, color = '#0f0') {
        const box = document.getElementById('yt-unlike-log');
        if (!box) return;
        const line = document.createElement('div');
        line.textContent = message;
        line.style.color = color;
        box.appendChild(line);
        box.scrollTop = box.scrollHeight;
        console.log(message);
    }

    // Check if we're on the Liked Videos playlist
    function isOnLikedVideos() {
        const url = new URL(window.location.href);
        return url.searchParams.get("list") === "LL";
    }

    // Attempt to unlike visible liked videos
    async function unlikeVisible() {
        const videoElems = document.querySelectorAll('ytd-playlist-video-renderer');

        for (const video of videoElems) {
            const videoId = video.dataset.videoId;
            if (!videoId || processed.has(videoId)) continue;

            const title = video.querySelector('#video-title')?.textContent?.trim() || "Untitled";

            try {
                const likeBtn = video.querySelector('ytd-toggle-button-renderer:nth-of-type(1) button[aria-pressed="true"]');
                if (likeBtn) {
                    likeBtn.click();
                    log(`üëç Unliked: ${title}`);
                    processed.add(videoId);
                    await sleep(DELAY);
                } else {
                    log(`‚è≠Ô∏è Skipped (already unliked): ${title}`, '#888');
                }
            } catch (e) {
                log(`‚ùå Error: ${title}`, 'red');
                notify("YouTube Unlike Error", `Failed to unlike "${title}"`);
            }
        }
    }

    // Auto scroll down to load more
    function scrollDown() {
        window.scrollBy(0, 2000);
    }

    // Main loop
    async function runUnliker() {
        if (scriptStarted) return;
        scriptStarted = true;

        log("‚úÖ Detected Liked Videos playlist. Starting...");
        notify("YouTube Unliker", "Started removing liked videos...");

        while (true) {
            scrollDown();
            await sleep(1500);
            await unlikeVisible();
        }
    }

    // Init the script on page load
    function init() {
        createLogBox();

        setInterval(() => {
            if (isOnLikedVideos()) {
                const items = document.querySelectorAll('ytd-playlist-video-renderer');
                if (items.length > 0) {
                    runUnliker();
                } else {
                    log("‚è≥ Waiting for playlist items to load...", '#ff0');
                }
            }
        }, 2000);
    }

    // Start after full page load
    window.addEventListener('load', () => {
        init();
        Notification.requestPermission(); // Ask once
    });
})();

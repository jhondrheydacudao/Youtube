// ==UserScript==
// @name         YouTube Auto Unsubscribe (FIXED + NOTIFICATIONS)
// @namespace    https://youtube.com/
// @version      2.1
// @description  Automatically unsubscribes from all channels on YouTube /feed/channels with progress notifications and confirmation clicking support (2025 Update). Use at your own risk! ðŸ”¥ðŸ”¥ðŸ”¥
// @author       Jhon DRHEY
// @match        https://www.youtube.com/feed/channels
// @grant        GM_notification
// @run-at       document-end
// ==/UserScript==

(function () {
    'use strict';

    let unsubscribed = 0;
    let total = 0;
    let interval;
    let channelIndex = 0;
    let channels = [];

    function notify(title, text) {
        GM_notification({
            title: title,
            text: text,
            timeout: 5000,
            onclick: () => window.focus(),
        });
    }

    // Scroll to bottom to load all channels
    async function scrollToLoadAllChannels(callback) {
        let lastHeight = 0;
        let attempts = 0;
        const maxAttempts = 25;

        const scrollInterval = setInterval(() => {
            window.scrollTo(0, document.body.scrollHeight);
            const newHeight = document.body.scrollHeight;

            if (newHeight === lastHeight) {
                attempts++;
            } else {
                attempts = 0;
            }

            lastHeight = newHeight;

            if (attempts >= 5 || attempts >= maxAttempts) {
                clearInterval(scrollInterval);
                notify('âœ… Channels Loaded', 'Beginning unsubscribe process...');
                setTimeout(callback, 2000);
            }
        }, 1500);
    }

    function collectSubscribedButtons() {
        const buttons = Array.from(document.querySelectorAll('ytd-channel-renderer tp-yt-paper-button[aria-label][subscribed]'))
            .filter(btn => btn.innerText.trim().toLowerCase() === "subscribed");

        return buttons;
    }

    function startUnsubscribing() {
        channels = collectSubscribedButtons();
        total = channels.length;

        if (total === 0) {
            notify('ðŸ“­ No Subscriptions', 'You have no subscribed channels.');
            return;
        }

        notify('ðŸ“£ Starting...', `Unsubscribing from ${total} channels...`);

        interval = setInterval(() => {
            if (channelIndex >= channels.length) {
                clearInterval(interval);
                notify('âœ… Done!', `Unsubscribed from ${unsubscribed} out of ${total} channels.`);
                return;
            }

            const button = channels[channelIndex];
            if (!button) {
                channelIndex++;
                return;
            }

            button.click();

            setTimeout(() => {
                const confirmBtn = document.querySelector('yt-confirm-dialog-renderer tp-yt-paper-button#confirm-button');

                if (confirmBtn) {
                    confirmBtn.click();
                    unsubscribed++;
                    notify(`ðŸš« Unsubscribed (${unsubscribed}/${total})`, `Channel ${channelIndex + 1}`);
                }
            }, 500);

            channelIndex++;
        }, 2500); // 2.5s delay between each unsubscribe to avoid rate limits
    }

    // Start everything
    window.addEventListener('load', () => {
        notify('ðŸ”„ Loading...', 'Scrolling to load all channels...');
        setTimeout(() => {
            scrollToLoadAllChannels(startUnsubscribing);
        }, 3000);
    });
})();
